// Generated by CoffeeScript 1.11.1
(function() {
  var base, classHelper,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Models).Comments || (base.Comments = {});

  Gruff.Models.Comment = (function(superClass) {
    extend(Comment, superClass);

    function Comment() {
      this.cancelVote = bind(this.cancelVote, this);
      this.voteDown = bind(this.voteDown, this);
      this.voteUp = bind(this.voteUp, this);
      return Comment.__super__.constructor.apply(this, arguments);
    }

    Comment.prototype.paramRoot = '';

    Comment.prototype.defaults = {
      user: null,
      date: null,
      comment: null
    };

    Comment.prototype.initialize = function(options) {
      var ref;
      this.debate = options.debate || ((ref = this.collection) != null ? ref.parent : void 0);
      this.updateUrl();
      return this.bind("change", this.updateUrl);
    };

    Comment.prototype.updateUrl = function(e) {
      var ref;
      return this.url = "/rest/debates/" + ((ref = this.debate) != null ? ref.id : void 0) + "/comments";
    };

    Comment.prototype.save = function() {
      this.updateUrl();
      return Comment.__super__.save.apply(this, arguments);
    };

    Comment.prototype.voteUp = function(options) {
      return $.ajax({
        type: "POST",
        url: "/rest/debates/" + this.debate.id + "/comments/" + this.id + "/vote/up",
        success: options.success,
        error: options.error
      });
    };

    Comment.prototype.voteDown = function(options) {
      return $.ajax({
        type: "POST",
        url: "/rest/debates/" + this.debate.id + "/comments/" + this.id + "/vote/down",
        success: options.success,
        error: options.error
      });
    };

    Comment.prototype.cancelVote = function(options) {
      return $.ajax({
        type: "DELETE",
        url: "/rest/debates/" + this.debate.id + "/comments/" + this.id + "/vote",
        success: options.success,
        error: options.error
      });
    };

    Comment.prototype.fullJSON = function() {
      var json;
      json = this.toJSON();
      json.curruser = Gruff.User.fullJSON();
      json.score = this.score();
      return json;
    };

    return Comment;

  })(Backbone.Model);

  Gruff.Collections.Comments = (function(superClass) {
    extend(Comments, superClass);

    function Comments() {
      return Comments.__super__.constructor.apply(this, arguments);
    }

    Comments.prototype.model = Gruff.Models.Comment;

    Comments.prototype.initialize = function(options) {
      var ref;
      this.parent = options.parent;
      return this.url = "/rest/debates/" + ((ref = this.parent) != null ? ref.id : void 0) + "/comments";
    };

    return Comments;

  })(Backbone.Collection);

  classHelper = new exports.ClassHelper();

  classHelper.augmentClass(Gruff.Models.Comment, exports.Comment);

}).call(this);
