// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Models).Users || (base.Users = {});

  Gruff.Models.User = (function(superClass) {
    extend(User, superClass);

    function User() {
      this.isLogged = bind(this.isLogged, this);
      this.isCurator = bind(this.isCurator, this);
      this.fullJSON = bind(this.fullJSON, this);
      return User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.paramRoot = '';

    User.prototype.idAttribute = '_id';

    User.prototype.url = '/rest/user';

    User.prototype.initialize = function(options) {};

    User.prototype.fullJSON = function() {
      var json;
      json = this.toJSON();
      json.logged = this.isLogged();
      json.curator = this.isCurator();
      return json;
    };

    User.prototype.isCurator = function() {
      var login;
      login = this.get("login");
      return login === 'thigh' || login === 'biggusgruffus';
    };

    User.prototype.isLogged = function() {
      return this.id != null;
    };

    return User;

  })(Backbone.Model);

}).call(this);
