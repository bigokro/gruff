// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Views).References || (base.References = {});

  Gruff.Views.References.NewView = (function(superClass) {
    extend(NewView, superClass);

    function NewView() {
      this.handleKeys = bind(this.handleKeys, this);
      this.save = bind(this.save, this);
      return NewView.__super__.constructor.apply(this, arguments);
    }

    NewView.prototype.initialize = function(options) {
      this.template = _.template($('#reference-new-template').text());
      this.attributeType = options.attributeType;
      this.model = new this.collection.model();
      this.model.collection = this.collection;
      this.parentModel = this.collection.parent;
      return this.model.bind("change:errors", (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    };

    NewView.prototype.save = function(e) {
      e.preventDefault();
      e.stopPropagation();
      this.model.unset("errors");
      return this.model.save(null, {
        success: (function(_this) {
          return function(reference) {
            _this.collection.add(reference);
            return _this.close();
          };
        })(this),
        error: (function(_this) {
          return function(reference, jqXHR) {
            return _this.handleRemoteError(jqXHR, reference);
          };
        })(this)
      });
    };

    NewView.prototype.render = function() {
      var json;
      json = this.model.fullJSON();
      $(this.el).html(this.template(json));
      $(this.el).show();
      Backbone.ModelBinding.bind(this);
      this.setUpEvents();
      $(this.el).parent().find('.new-reference-link').hide();
      $(this.el).find('input').first().focus();
      return this;
    };

    NewView.prototype.setUpEvents = function() {
      $(document).bind("keydown", this.handleKeys);
      this.$("input[type='submit']:visible").bind('click', this.save);
      return this.$('.cancel_button:visible').bind('click', this.close);
    };

    NewView.prototype.cancelEvents = function() {
      return $(document).unbind("keydown", this.handleKeys);
    };

    NewView.prototype.close = function() {
      $(this.el).parent().find('.new-reference-link').show();
      $(this.el).children().remove();
      this.cancelEvents();
      this.unbind();
      return Backbone.ModelBinding.unbind(this);
    };

    NewView.prototype.handleKeys = function(e) {
      if (e.keyCode === 27) {
        this.close();
        return false;
      } else {
        return true;
      }
    };

    return NewView;

  })(Backbone.View);

}).call(this);
