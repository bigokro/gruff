// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Views).Login || (base.Login = {});

  Gruff.Views.Login.LoginView = (function(superClass) {
    extend(LoginView, superClass);

    function LoginView() {
      this.submit = bind(this.submit, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.initialize = function(options) {
      LoginView.__super__.initialize.call(this, options);
      this.template = _.template($('#login-template').text());
      this.model = new Gruff.Models.Login;
      return this.model.bind("change:errors", (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    };

    LoginView.prototype.render = function() {
      var json;
      LoginView.__super__.render.apply(this, arguments);
      json = this.model.toJSON();
      $(this.el).append(this.template(json));
      Backbone.ModelBinding.bind(this);
      this.center();
      $('#login-form').bind('submit', this.submit);
      $('#login-cancel').bind('click', this.cancel);
      $(this.el).find('#login').focus();
      return this;
    };

    LoginView.prototype.submit = function(e) {
      e.preventDefault();
      e.stopPropagation();
      return this.model.save(null, {
        success: (function(_this) {
          return function() {
            Gruff.User.fetch();
            return _this.close();
          };
        })(this),
        error: (function(_this) {
          return function(data, jqXHR) {
            if (jqXHR.responseText.indexOf('Login failed') > 0) {
              return alert("Login failed. Please try again.");
            } else {
              return _this.close();
            }
          };
        })(this)
      });
    };

    return LoginView;

  })(Gruff.Views.ModalView);

}).call(this);
