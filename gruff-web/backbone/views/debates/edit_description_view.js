// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Views).Debates || (base.Debates = {});

  Gruff.Views.Debates.EditDescriptionView = (function(superClass) {
    extend(EditDescriptionView, superClass);

    function EditDescriptionView() {
      this.handleKeys = bind(this.handleKeys, this);
      this.close = bind(this.close, this);
      this.render = bind(this.render, this);
      return EditDescriptionView.__super__.constructor.apply(this, arguments);
    }

    EditDescriptionView.prototype.initialize = function(options) {
      this.template = _.template($('#debate-edit-description-template').text());
      this.descriptionEl = options.descriptionEl;
      return this.model.bind("change:errors", (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    };

    EditDescriptionView.prototype.save = function() {
      var newDescription;
      this.model.unset("errors");
      newDescription = this.editDescriptionField.val();
      this.model.setDescription(newDescription);
      return $.ajax({
        type: "POST",
        url: "/debates/descriptions/new",
        data: {
          _id: this.model.linkableId(),
          desc: newDescription
        },
        success: (function(_this) {
          return function(data) {
            $(_this.descriptionEl).html(_this.formatText(newDescription));
            return _this.close();
          };
        })(this),
        error: (function(_this) {
          return function(jqXHR, type) {
            return _this.handleRemoteError(jqXHR);
          };
        })(this)
      });
    };

    EditDescriptionView.prototype.render = function() {
      var json;
      json = this.model.fullJSON();
      this.parent = $(this.el).parent();
      if (this.descriptionEl == null) {
        this.descriptionEl = $(this.parent).find('> .body');
      }
      $(this.descriptionEl).after(this.template(json));
      $(this.descriptionEl).hide();
      this.editDescriptionField = $(this.parent).find('#' + this.model.linkableId() + "-description-field");
      this.editDescriptionField.bind("keydown", this.handleKeys);
      this.editDescriptionField.bind("blur", this.close);
      this.editDescriptionField.show();
      this.editDescriptionField.focus();
      return this;
    };

    EditDescriptionView.prototype.close = function() {
      $(this.descriptionEl).show();
      this.editDescriptionField.remove();
      return this.unbind();
    };

    EditDescriptionView.prototype.handleKeys = function(e) {
      if (e.keyCode === 13) {
        this.save();
        return false;
      } else if (e.keyCode === 27) {
        this.close();
        return false;
      } else {
        return true;
      }
    };

    return EditDescriptionView;

  })(Backbone.View);

}).call(this);
