// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Views).Debates || (base.Debates = {});

  Gruff.Views.Debates.SimpleNewView = (function(superClass) {
    extend(SimpleNewView, superClass);

    function SimpleNewView() {
      return SimpleNewView.__super__.constructor.apply(this, arguments);
    }

    SimpleNewView.prototype.initialize = function(options) {
      SimpleNewView.__super__.initialize.call(this, options);
      this.parentView = options.parentView;
      this.model.set({
        type: this.model.DebateTypes.DIALECTIC
      });
      return this.template = _.template($('#debate-simple-new-template').text());
    };

    SimpleNewView.prototype.save = function(e) {
      return SimpleNewView.__super__.save.call(this, e);
    };

    SimpleNewView.prototype.render = function() {
      var json;
      json = this.model.fullJSON();
      json.attributeType = this.attributeType;
      $(this.el).append(this.template(json));
      Backbone.ModelBinding.bind(this);
      this.formEl = $(this.el).find('> #simple-new-debate');
      this.titleEl = $(this.formEl).find('> #title');
      this.formEl.bind("submit", this.save);
      this.formEl.bind("blur", this.close);
      this.setUpEvents();
      this.titleEl.focus();
      return this;
    };

    SimpleNewView.prototype.close = function() {
      $(this.formEl).remove();
      this.parentView.linkEl.show();
      this.cancelEvents();
      this.unbind();
      return Backbone.ModelBinding.unbind(this);
    };

    SimpleNewView.prototype.setUpEvents = function() {
      return $(this.titleEl).bind("keydown", this.handleKeys);
    };

    SimpleNewView.prototype.cancelEvents = function() {
      return $(this.titleEl).unbind("keydown", this.handleKeys);
    };

    return SimpleNewView;

  })(Gruff.Views.Debates.NewView);

}).call(this);
