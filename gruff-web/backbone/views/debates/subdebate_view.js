// Generated by CoffeeScript 1.11.1
(function() {
  var base,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (base = Gruff.Views).Debates || (base.Debates = {});

  Gruff.Views.Debates.SubdebateView = (function(superClass) {
    extend(SubdebateView, superClass);

    function SubdebateView() {
      this.lower = bind(this.lower, this);
      this.raise = bind(this.raise, this);
      this.close = bind(this.close, this);
      this.cloneLink = bind(this.cloneLink, this);
      this.handleKeys = bind(this.handleKeys, this);
      return SubdebateView.__super__.constructor.apply(this, arguments);
    }

    SubdebateView.prototype.initialize = function(options) {
      SubdebateView.__super__.initialize.call(this, options);
      return this.parentView = options.parentView;
    };

    SubdebateView.prototype.render = function() {
      this.model.bind("fetched-subdebates", (function(_this) {
        return function() {
          var offset;
          $(_this.el).show();
          _this.linkDiv = $(_this.el).parents('.debate-list-item')[0];
          offset = $(_this.linkDiv).offset();
          offset.top = offset.top + $(_this.linkDiv).height();
          offset.left = $(window).width() / 10;
          $(_this.el).css('position', 'absolute');
          $(_this.el).offset(offset);
          $(_this.el).width($(window).width() * .8);
          _this.enableKeys();
          _this.addModal();
          return _this.raise();
        };
      })(this));
      SubdebateView.__super__.render.apply(this, arguments);
      return this;
    };

    SubdebateView.prototype.enableKeys = function() {
      return $(document).bind('keydown', this.handleKeys);
    };

    SubdebateView.prototype.handleKeys = function(e) {
      if (e.keyCode === 27) {
        this.close();
        return false;
      } else {
        return true;
      }
    };

    SubdebateView.prototype.addModal = function() {
      $(this.el).parents('.debates-list').first().append('<div class="modal-bg"></div>');
      this.modal = $(this.el).parents('.debates-list').first().find('.modal-bg');
      this.modal.width($(document).width());
      this.modal.height($(document).height());
      return this.modal.offset({
        top: 0,
        left: 0
      });
    };

    SubdebateView.prototype.cloneLink = function() {
      var h4;
      h4 = this.el.siblings('h4');
      this.cloneEl = h4.clone(true);
      this.cloneEl.css('position', 'absolute');
      this.cloneEl.offset(h4.find('a.title-link').offset());
      this.cloneEl.css('z-index', this.el.css('z-index'));
      this.cloneEl.css('margin', 0);
      this.cloneEl.css('padding', 0);
      return this.el.parent().append(this.cloneEl);
    };

    SubdebateView.prototype.close = function() {
      var ref;
      $(document).unbind('keydown');
      this.model.unbind("fetched-subdebates");
      if ((ref = this.modal) != null) {
        ref.remove();
      }
      this.parentView.modalView = null;
      this.parentView.enableDragDrop();
      this.lower();
      $(this.el).html("");
      $(this.el).hide();
      return this.unbind();
    };

    SubdebateView.prototype.raise = function() {
      _.each($(this.el).parents('.debate-list-item'), (function(_this) {
        return function(parent) {
          var zindex;
          zindex = $(parent).css('z-index');
          if (zindex === 'auto') {
            zindex = 10;
          } else {
            zindex = parseInt(zindex);
          }
          $(parent).css('z-index', zindex + 5);
          $(_this.el).css('z-index', zindex + 5);
          return $(_this.modal).css('z-index', zindex + 4);
        };
      })(this));
      return this.cloneLink();
    };

    SubdebateView.prototype.lower = function() {
      _.each($(this.el).parents('.debate-list-item'), (function(_this) {
        return function(parent) {
          var zindex;
          zindex = parseInt($(parent).css('z-index'));
          $(parent).css('z-index', zindex - 5);
          return $(_this.el).css('z-index', zindex - 5);
        };
      })(this));
      return this.cloneEl.remove();
    };

    return SubdebateView;

  })(Gruff.Views.Debates.ShowView);

}).call(this);
