// Generated by CoffeeScript 1.11.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Gruff.User = new Gruff.Models.User();

  Gruff.User.fetch();

  Gruff.Routers.DebatesRouter = (function(superClass) {
    extend(DebatesRouter, superClass);

    function DebatesRouter() {
      return DebatesRouter.__super__.constructor.apply(this, arguments);
    }

    DebatesRouter.prototype.routes = {
      "canvas/new": "newDebate",
      "canvas/index": "index",
      "canvas/:id/edit": "edit",
      "canvas/:id": "show",
      "canvas/.*": "index"
    };

    DebatesRouter.prototype.newDebate = function() {
      this.view = new Gruff.Views.Debates.NewView({
        collection: this.debates
      });
      return $("#debates").html(this.view.render().el);
    };

    DebatesRouter.prototype.index = function() {
      this.view = new Gruff.Views.Debates.IndexView({
        collection: this.debates
      });
      return $("#debates").html(this.view.render().el);
    };

    DebatesRouter.prototype.show = function(id) {
      this.model = new Gruff.Models.Debate({
        "_id": id
      });
      return this.model.fetch({
        success: (function(_this) {
          return function(model, response) {
            _this.view = new Gruff.Views.Debates.ShowView({
              'el': $('#' + model.linkableId()),
              'model': model
            });
            _this.view.render();
            return _this.view.maximize();
          };
        })(this)
      });
    };

    DebatesRouter.prototype.edit = function(id) {
      var debate;
      debate = this.debates.get(id);
      this.view = new Gruff.Views.Debates.EditView({
        model: debate
      });
      return $("#debates").html(this.view.render().el);
    };

    return DebatesRouter;

  })(Backbone.Router);

}).call(this);
