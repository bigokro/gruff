/* 
 * Provides functions for all main types of debates:
 * Multi-answer "Debates",
 * Yes/No debates around an "Answer" (or action or solution),
 * True/False debates around proposed "Facts"
 */

var Identifible = require('./identifiable').Identifiable;
var Describable = require('./describable').Describable;
var ClassHelper = require('../includes/class_helper').ClassHelper;
var classHelper = new ClassHelper();

Debate = function() {
};

Debate.prototype.DebateTypes = {
    DEBATE : "Debate",
    ANSWER : "Answer",
    FACT : "Fact"
};

Debate.prototype.bestTitle = function() {
    if (typeof(this.titles)=="undefined") {
	return this.title;
    }
    // Barring a voting algorithm,
    // for now, let's return the latest
    return this.titles[this.titles.length-1];
};

Debate.prototype.bestTitleText = function() {
    var title = this.bestTitle();
    if (title.title === undefined) {
	return title;
    } else {
	return title.title;
    }
};


Debate.prototype.linkableId = function() {
    return this._id.toHexString())
};


Debate.prototype.argument = function(argid) {
    for (var i=0; i < this.arguments.length; i++) {
	if (this.arguments[i].linkableId() == argid) {
	    return this.arguments[i];
	}
    }
    return null;
};

classHelper.augmentClass(Debate, Identifiable);
classHelper.augmentClass(Debate, Describable);

exports.Debate = Debate;
